#include "gps.h"
#include "led.h"
#include "delay.h"
#include "usart3.h"
#include "stdio.h"
#include "stdarg.h"
#include "string.h"
#include "math.h"
//////////////////////////////////////////////////////////////////////////////////
const u32 BAUD_id[9]={4800,9600,19200,38400,57600,115200,230400,460800,921600};

u8 NMEA_Comma_Pos(u8 *buf,u8 cx)
{
	u8 *p=buf;
	while(cx)
{
if(*buf=='*'||*buf<' '||*buf>'z')return 0XFF;
//??'*'??????,????? cx ???
if(*buf==',')cx--;
buf++;
}
return buf-p;
}
//m^n ??
//???:m^n ??.
u32 NMEA_Pow(u8 m,u8 n)
{
u32 result=1;
while(n--)result*=m;
return result;
}
//str ?????,?','??'*'??
//buf:?????
//dx:?????,???????
//???:??????
int NMEA_Str2num(u8 *buf,u8*dx)
{
u8 *p=buf;
u32 ires=0,fres=0;
u8 ilen=0,flen=0,i;
u8 mask=0;
int res;
while(1) //??????????
{
if(*p=='-'){mask|=0X02;p++;}//???
if(*p==','||(*p=='*'))break;//?????
if(*p=='.'){mask|=0X01;p++;}//??????
else if(*p>'9'||(*p<'0')) //?????
{
ilen=0;
flen=0;
break;
}
if(mask&0X01)flen++;
else ilen++;
p++;
}
if(mask&0X02)buf++; //????
for(i=0;i<ilen;i++) //????????
{
ires+=NMEA_Pow(10,ilen-1-i)*(buf[i]-'0');
}
if(flen>5)flen=5; //??? 5 ???
*dx=flen; //?????
for(i=0;i<flen;i++) //????????
{
fres+=NMEA_Pow(10,flen-1-i)*(buf[ilen+1+i]-'0');
}
res=ires*NMEA_Pow(10,flen)+fres;
if(mask&0X02)res=-res;
return res;
}
//?? GPGSV ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void NMEA_GPGSV_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p,*p1,dx;
u8 len,i,j,slx=0;
u8 posx;
p=buf;
p1=(u8*)strstr((const char *)p,"$GPGSV");
len=p1[7]-'0'; //?? GPGSV ???
posx=NMEA_Comma_Pos(p1,3); //????????
if(posx!=0XFF)gpsx->svnum=NMEA_Str2num(p1+posx,&dx);
for(i=0;i<len;i++)
{
p1=(u8*)strstr((const char *)p,"$GPGSV");
for(j=0;j<4;j++)
{
posx=NMEA_Comma_Pos(p1,4+j*4);
if(posx!=0XFF)gpsx->slmsg[slx].num=NMEA_Str2num(p1+posx,&dx);
//??????
else break;
posx=NMEA_Comma_Pos(p1,5+j*4);
if(posx!=0XFF)gpsx->slmsg[slx].eledeg=NMEA_Str2num(p1+posx,&dx);
//??????
	
	
	else break;
posx=NMEA_Comma_Pos(p1,6+j*4);
if(posx!=0XFF)gpsx->slmsg[slx].azideg=NMEA_Str2num(p1+posx,&dx);
//???????
else break;
posx=NMEA_Comma_Pos(p1,7+j*4);
if(posx!=0XFF)gpsx->slmsg[slx].sn=NMEA_Str2num(p1+posx,&dx);
//???????
else break;
slx++;
}
p=p1+1;//?????? GPGSV ??
}
}
//?? BDGSV ??
//gpsx:nmea ?????
//buf:??????????????
void NMEA_BDGSV_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p,*p1,dx;
u8 len,i,j,slx=0;
u8 posx;
p=buf;
p1=(u8*)strstr((const char *)p,"$BDGSV");
len=p1[7]-'0'; //?? BDGSV ???
posx=NMEA_Comma_Pos(p1,3); //??????????
if(posx!=0XFF)gpsx->beidou_svnum=NMEA_Str2num(p1+posx,&dx);
for(i=0;i<len;i++)
{
p1=(u8*)strstr((const char *)p,"$BDGSV");
for(j=0;j<4;j++)
{
posx=NMEA_Comma_Pos(p1,4+j*4);
if(posx!=0XFF)gpsx->beidou_slmsg[slx].beidou_num=NMEA_Str2num(p1+posx,&dx);
//??????
else break;
posx=NMEA_Comma_Pos(p1,5+j*4);
if(posx!=0XFF)gpsx->beidou_slmsg[slx].beidou_eledeg=NMEA_Str2num(p1+posx,&dx);
//??????
else break;
posx=NMEA_Comma_Pos(p1,6+j*4);
if(posx!=0XFF)gpsx->beidou_slmsg[slx].beidou_azideg=NMEA_Str2num(p1+posx,&dx);
//???????
else break;
posx=NMEA_Comma_Pos(p1,7+j*4);
if(posx!=0XFF)gpsx->beidou_slmsg[slx].beidou_sn=NMEA_Str2num(p1+posx,&dx);
//???????
else break;
slx++;
}
p=p1+1;//?????? BDGSV ??
}
}
//?? GNGGA ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void NMEA_GNGGA_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p1,dx;
u8 posx;
p1=(u8*)strstr((const char *)buf,"$GNGGA");
posx=NMEA_Comma_Pos(p1,6); //?? GPS ??
if(posx!=0XFF)gpsx->gpssta=NMEA_Str2num(p1+posx,&dx);
posx=NMEA_Comma_Pos(p1,7);
//??????????
if(posx!=0XFF)gpsx->posslnum=NMEA_Str2num(p1+posx,&dx);
posx=NMEA_Comma_Pos(p1,9); //??????
if(posx!=0XFF)gpsx->altitude=NMEA_Str2num(p1+posx,&dx);
}
//?? GNGSA ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void NMEA_GNGSA_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p1,dx;
u8 posx;
u8 i;
p1=(u8*)strstr((const char *)buf,"$GNGSA");
posx=NMEA_Comma_Pos(p1,2); //??????
if(posx!=0XFF)gpsx->fixmode=NMEA_Str2num(p1+posx,&dx);
for(i=0;i<12;i++) //????????
{
posx=NMEA_Comma_Pos(p1,3+i);
if(posx!=0XFF)gpsx->possl[i]=NMEA_Str2num(p1+posx,&dx);
	else break;
}
posx=NMEA_Comma_Pos(p1,15);
//?? PDOP ??????
if(posx!=0XFF)gpsx->pdop=NMEA_Str2num(p1+posx,&dx);
posx=NMEA_Comma_Pos(p1,16);
//?? HDOP ??????
if(posx!=0XFF)gpsx->hdop=NMEA_Str2num(p1+posx,&dx);
posx=NMEA_Comma_Pos(p1,17);
//?? VDOP ??????
if(posx!=0XFF)gpsx->vdop=NMEA_Str2num(p1+posx,&dx);
}
//?? GNRMC ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void NMEA_GNRMC_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p1,dx;
u8 posx;
u32 temp;
float rs;
p1=(u8*)strstr((const char *)buf,"$GNRMC");
//"$GNRMC",???&? GNRMC ?????,???? GPRMC.
posx=NMEA_Comma_Pos(p1,1);
//?? UTC ??
if(posx!=0XFF)
{
temp=NMEA_Str2num(p1+posx,&dx)/NMEA_Pow(10,dx);
//?? UTC ??,?? ms
gpsx->utc.hour=temp/10000;
gpsx->utc.min=(temp/100)%100;
gpsx->utc.sec=temp%100;
}
posx=NMEA_Comma_Pos(p1,3);
//????
if(posx!=0XFF)
{
temp=NMEA_Str2num(p1+posx,&dx);
gpsx->latitude=temp/NMEA_Pow(10,dx+2); //??°
rs=temp%NMEA_Pow(10,dx+2); //??'
gpsx->latitude=gpsx->latitude*NMEA_Pow(10,5)+(rs*NMEA_Pow(10,5-dx))/60;
//???°
}
posx=NMEA_Comma_Pos(p1,4); //??????
if(posx!=0XFF)gpsx->nshemi=*(p1+posx);
posx=NMEA_Comma_Pos(p1,5); //????
if(posx!=0XFF)
{
temp=NMEA_Str2num(p1+posx,&dx);
gpsx->longitude=temp/NMEA_Pow(10,dx+2); //??°
rs=temp%NMEA_Pow(10,dx+2); //??'
gpsx->longitude=gpsx->longitude*NMEA_Pow(10,5)+(rs*NMEA_Pow(10,5-dx))/60;
//???°
}
posx=NMEA_Comma_Pos(p1,6); //??????
if(posx!=0XFF)gpsx->ewhemi=*(p1+posx);
posx=NMEA_Comma_Pos(p1,9); //?? UTC ??
if(posx!=0XFF)
{
temp=NMEA_Str2num(p1+posx,&dx); //?? UTC ??
gpsx->utc.date=temp/10000;
gpsx->utc.month=(temp/100)%100;
gpsx->utc.year=2000+temp%100;
}
}
//?? GNVTG ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void NMEA_GNVTG_Analysis(nmea_msg *gpsx,u8 *buf)
{
u8 *p1,dx;
u8 posx;
p1=(u8*)strstr((const char *)buf,"$GNVTG");
posx=NMEA_Comma_Pos(p1,7); //??????
if(posx!=0XFF)
{
gpsx->speed=NMEA_Str2num(p1+posx,&dx);
if(dx<3)gpsx->speed*=NMEA_Pow(10,3-dx);
//???? 1000 ?
}
}
//?? NMEA-0183 ??
//gpsx:nmea ?????
//buf:???? GPS/??????????
void GPS_Analysis(nmea_msg *gpsx,u8 *buf)
{
NMEA_GPGSV_Analysis(gpsx,buf); //GPGSV ??
NMEA_BDGSV_Analysis(gpsx,buf); //BDGSV ??
NMEA_GNGGA_Analysis(gpsx,buf); //GNGGA ??
NMEA_GNGSA_Analysis(gpsx,buf); //GNGSA ??
NMEA_GNRMC_Analysis(gpsx,buf); //GNRMC ??
NMEA_GNVTG_Analysis(gpsx,buf); //GNVTG ??
}
///////////////////////////////////////////SkyTraq ????/////////////////////////////////////
////?? CFG ??????
////???:0,ACK ??
//// 1,??????
//// 2,????????
//// 3,??? NACK ??
u8 SkyTra_Cfg_Ack_Check(void)
{
u16 len=0,i;
u8 rval=0;
while((USART3_RX_STA&0X8000)==0 && len<100)//???????
{
len++;
delay_ms(5);
}
if(len<100) //????.
{
len=USART3_RX_STA&0X7FFF; //??????????
for(i=0;i<len;i++)
{
if(USART3_RX_BUF[i]==0X83)break;
else if(USART3_RX_BUF[i]==0X84)
{
rval=3;
break;
}
}
if(i==len)rval=2; //????????
}else rval=1; //??????
 USART3_RX_STA=0; //????
return rval;
}
//?? SkyTra_GPS/???????
//baud_id:0~8,?????,4800/9600/19200/38400/57600/115200/230400/460800/921600
//???:0,????;??,????(?????? 0 ?)
u8 SkyTra_Cfg_Prt(u32 baud_id)
{
SkyTra_baudrate *cfg_prt=(SkyTra_baudrate *)USART3_TX_BUF;
cfg_prt->sos=0XA1A0; //????(????)
cfg_prt->PL=0X0400; //??????(????)
cfg_prt->id=0X05; //?????? ID
cfg_prt->com_port=0X00; //???? 1
cfg_prt->Baud_id=baud_id; ////???????
cfg_prt->Attributes=1; //??? SRAM&FLASH
cfg_prt->CS=cfg_prt->id^cfg_prt->com_port^cfg_prt->Baud_id^cfg_prt->Attributes;
cfg_prt->end=0X0A0D; //?????(????)
SkyTra_Send_Date((u8*)cfg_prt,sizeof(SkyTra_baudrate));//????? SkyTraF8
delay_ms(200); //??????
usart3_init(36,BAUD_id[baud_id]); //??????? 3
return SkyTra_Cfg_Ack_Check();
//?????? 0,?? SkyTra ???????????????????????.
}
//?? SkyTra_GPS/???????????
//width:???? 1~100000(us)
//???:0,????;??,????.
u8 SkyTra_Cfg_Tp(u32 width)
{
u32 temp=width;
SkyTra_pps_width *cfg_tp=(SkyTra_pps_width *)USART3_TX_BUF;
temp=(width>>24)|((width>>8)&0X0000FF00)|((width<<8)&0X00FF0000)|((width<<2
4)&0XFF000000); //????
cfg_tp->sos=0XA1A0; //cfg header(????)
cfg_tp->PL=0X0700; //??????(????)
cfg_tp->id=0X65 ; //cfg tp id
cfg_tp->Sub_ID=0X01; //?????? 20 ???.
cfg_tp->width=temp; //????,us
cfg_tp->Attributes=0X01; //??? SRAM&FLASH
cfg_tp->CS=cfg_tp->id^cfg_tp->Sub_ID^(cfg_tp->width>>24)^(cfg_tp->width>>16)&
0XFF^(cfg_tp->width>>8)&0XFF^cfg_tp->width&0XFF^cfg_tp->Attributes;
cfg_tp->end=0X0A0D; //?????(????)
SkyTra_Send_Date((u8*)cfg_tp,sizeof(SkyTra_pps_width)); //????? SkyTra
return SkyTra_Cfg_Ack_Check();
}
//?? SkyTraF8-BD ?????
//Frep:(????:1,2,4,5,8,10,20)??????,??? Hz,?????? 20Hz
//???:0,????;??,????.
u8 SkyTra_Cfg_Rate(u8 Frep)
{
SkyTra_PosRate *cfg_rate=(SkyTra_PosRate *)USART3_TX_BUF;
cfg_rate->sos=0XA1A0; //cfg header(????)
cfg_rate->PL=0X0300; //??????(????)
cfg_rate->id=0X0E; //cfg rate id
cfg_rate->rate=Frep; //????
cfg_rate->Attributes=0X01; //??? SRAM&FLASH .
cfg_rate->CS=cfg_rate->id^cfg_rate->rate^cfg_rate->Attributes;//????,us
cfg_rate->end=0X0A0D; //?????(????)
SkyTra_Send_Date((u8*)cfg_rate,sizeof(SkyTra_PosRate)); //????? SkyTra
return SkyTra_Cfg_Ack_Check();
}
//??????? SkyTraF8-BD,?????? 3 ??
//dbuf:???????
//len:???????
void SkyTra_Send_Date(u8* dbuf,u16 len)
{
u16 j;
for(j=0;j<len;j++)//??????
{
while((USART3->SR&0X40)==0); //????,??????
USART3->DR=dbuf[j];
}
}